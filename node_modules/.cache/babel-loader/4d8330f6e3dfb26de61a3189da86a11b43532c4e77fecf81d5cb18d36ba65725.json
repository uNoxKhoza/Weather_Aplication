{"ast":null,"code":"var _jsxFileName = \"/home/nox/react-final-project/src/WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  function load() {\n    let apiKey = \"be81f193e065bf5feb2d944c7336968b\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n_c = WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherForecastDay","jsxDEV","_jsxDEV","WeatherForecast","props","_s","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","load","apiKey","longitude","lon","latitude","lat","apiUrl","get","then","className","children","map","dailyForecast","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nox/react-final-project/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n    let [loaded, setLoaded] = useState(false);\n    let [forecast, setForecast] = useState(null);\n\n    useEffect(() => {\n      setLoaded(false);\n    }, [props.coordinates]);\n    \n    function handleResponse(response) {\n        setForecast(response.data.daily);\n        setLoaded(true);\n    }\n\n    function load() {\n        let apiKey = \"be81f193e065bf5feb2d944c7336968b\";\n        let longitude = props.coordinates.lon;\n        let latitude = props.coordinates.lat;\n        let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n        axios.get(apiUrl).then(handleResponse);\n    }\n\n    if (loaded) {\n        return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n            {forecast.map(function (dailyForecast, index) {\n                if (index < 5) {\n                    return (\n                      <div className=\"col\" key={index}>\n                        <WeatherForecastDay data={dailyForecast} />\n                      </div>\n                    );\n                } else {\n                    return null;\n                }\n            })}\n        </div>\n      </div>\n    );\n    } else {\n\n    load();\n    \n    return null;\n\n    }\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC,EAAE,CAACH,KAAK,CAACM,WAAW,CAAC,CAAC;EAEvB,SAASC,cAAcA,CAACC,QAAQ,EAAE;IAC9BH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCP,SAAS,CAAC,IAAI,CAAC;EACnB;EAEA,SAASQ,IAAIA,CAAA,EAAG;IACZ,IAAIC,MAAM,GAAG,kCAAkC;IAC/C,IAAIC,SAAS,GAAGb,KAAK,CAACM,WAAW,CAACQ,GAAG;IACrC,IAAIC,QAAQ,GAAGf,KAAK,CAACM,WAAW,CAACU,GAAG;IACpC,IAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,eAAc;IAE5HjB,KAAK,CAACuB,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACZ,cAAc,CAAC;EAC1C;EAEA,IAAIL,MAAM,EAAE;IACR,oBACFJ,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BvB,OAAA;QAAKsB,SAAS,EAAC,KAAK;QAAAC,QAAA,EACfjB,QAAQ,CAACkB,GAAG,CAAC,UAAUC,aAAa,EAAEC,KAAK,EAAE;UAC1C,IAAIA,KAAK,GAAG,CAAC,EAAE;YACX,oBACE1B,OAAA;cAAKsB,SAAS,EAAC,KAAK;cAAAC,QAAA,eAClBvB,OAAA,CAACF,kBAAkB;gBAACa,IAAI,EAAEc;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADnBJ,KAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAAC;UAEZ,CAAC,MAAM;YACH,OAAO,IAAI;UACf;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAER,CAAC,MAAM;IAEPjB,IAAI,CAAC,CAAC;IAEN,OAAO,IAAI;EAEX;AACJ;AAACV,EAAA,CA/CuBF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}